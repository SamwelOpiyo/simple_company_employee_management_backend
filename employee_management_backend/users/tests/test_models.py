from django.conf import settings
from django.test import TestCase

from model_mommy import mommy
import pytest

from employee_management_backend.users.models import User, Address


pytestmark = pytest.mark.django_db


def test_user_get_absolute_url(user: settings.AUTH_USER_MODEL):
    assert user.get_absolute_url() == f"/users/{user.username}/"


class TestUserModel(TestCase):
    """
    Test User creation using data generated by model_mommy
    """

    def setUp(self):
        self.new_user = mommy.make("users.User")

    def test_user_creation_mommy(self):
        self.assertTrue(isinstance(self.new_user, User))
        self.assertTrue(self.new_user.__str__(), self.new_user.username)


class TestAddressModel(TestCase):
    """
    Test Address creation using data generated by model_mommy
    """

    def setUp(self):
        self.new_user = mommy.make("users.User")
        self.new_address = mommy.make("users.Address", user=self.new_user)

    def test_address_creation_mommy(self):
        self.assertTrue(isinstance(self.new_address, Address))
        self.assertTrue(isinstance(self.new_user, User))
        self.assertEqual(self.new_user.__str__(), self.new_user.username)
        self.assertEqual(
            self.new_address.__str__(),
            "{},{},{},{}".format(
                self.new_address.address1,
                self.new_address.city,
                self.new_address.county,
                self.new_address.country,
            ),
        )
        self.assertEqual(self.new_address.user, self.new_user)
